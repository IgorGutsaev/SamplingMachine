@page "/kiosks"
@using MPT.SamplingMachine.ApiClient;
@using MPT.Vending.API.Dto;
@using Portal.StateContainers;
@attribute [StreamRendering(true)]
@inject NavigationManager navigationManager
@inject SamplingMachineApiClient _client;
@inject KioskStateContainer kioskStateContainer

<PageTitle>Kiosks</PageTitle>

<h1>Kiosks</h1>

<p>List of kiosks</p>

@if (kiosks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addKioskModal">
        New
    </button>

    <!-- Modal -->
    <div class="modal fade" id="addKioskModal" tabindex="-1" aria-labelledby="addKioskModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addKioskModalLabel">New kiosk</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                   <div class="input-group mb-3">
                      <span class="input-group-text" id="basic-addon1">Name</span>
                      <input type="text" class="form-control" placeholder="E.g. 'baz'" aria-label="Name" aria-describedby="basic-addon1">
                   </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary close" data-dismiss="modal" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var kiosk in kiosks)
            {
                <tr>
                    <td>
                        <button class="btn btn-light" @onclick="() => EditKiosk(kiosk.UID)">@kiosk.UID</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<KioskDto> kiosks;

    protected override async Task OnInitializedAsync()
    {
        kiosks = await _client.GetKiosksAsync();
    }

    private void EditKiosk(string uid)
    {
        kioskStateContainer.SetValue(kiosks.First(x => x.UID == uid));
        navigationManager.NavigateTo($"/kiosk/{uid}");
    }
}