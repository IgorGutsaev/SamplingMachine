@page "/sessions";
@using MPT.SamplingMachine.ApiClient;
@using MPT.Vending.API.Dto;
@using Microsoft.AspNetCore.SignalR.Client;
@using Portal.StateContainers;
@using System.Text.Json;
@attribute [StreamRendering(true)]
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
@inject SamplingMachineApiClient _client
@inject NavigationManager _uriHelper
@inject SessionStateContainer sessionStateContainer

<PageTitle>Sessions</PageTitle>

<h1>Sessions</h1>

<p>List of sessions</p>

<table class="table">
    <thead>
        <tr>
            <th>Number</th>
            <th>Date</th>
            <th>Credit used</th>
        </tr>
    </thead>
    <tbody>

        @if (sessions != null)
        {
            foreach (var session in sessions)
            {
                string popoverId = PopoverContentId(session);
                <tr>
                    <td>
                        <button id="@SessionId(session)" type="button" class="btn btn-sm btn-dark" data-bs-toggle="popover" @onclick="() => GoToSessionDetails(session)" data-bs-trigger="hover" title="Session @session.PhoneNumber" data-bs-content-id="@popoverId">@session.PhoneNumber</button>
                        <div id="@popoverId" class="d-none">
                            @foreach (var item in session.Items)
                            {
                                <span class="badge bg-warning text-dark">Credit: @(item.UnitCredit * item.Count)</span>
                                <strong>&nbsp;@item.Product.Sku</strong>
                                <span>&nbsp;x&nbsp;@item.Count</span>
                                <br>
                            }
                        </div>
                    </td>
                    <td>
                        @session.Date?.ToString("HH:mm:ss dd/MMM/yyyy")
                    </td>
                    <td>
                        <span class="badge bg-warning text-dark">@session.Items.Sum(x => x.UnitCredit * x.Count)</span>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private IEnumerable<Session> sessions;
    private HubConnection hubConnectionEditBelt;

    protected override async Task OnInitializedAsync()
    {
        hubConnectionEditBelt = new HubConnectionBuilder()
           .WithUrl(_uriHelper.ToAbsoluteUri("/hookhub"))
           .Build();

        hubConnectionEditBelt.On<string>("OnNewSession", async (sessionData) =>
        {
            Session session = JsonSerializer.Deserialize<Session>(sessionData);
            List<Session> listOfSessions = sessions.ToList();
            listOfSessions.Insert(0, session);
            sessions = listOfSessions;

            await InvokeAsync(() =>
            {
                StateHasChanged();
            });

            await JSRuntime.InvokeVoidAsync("ui.htmlizePopover");
        });

        await hubConnectionEditBelt.StartAsync();

        sessions = await _client.GetSessionsAsync(new SessionsRequest { From = DateTime.Now.Date, To = DateTime.Now });
        StateHasChanged();
        await JSRuntime.InvokeVoidAsync("ui.htmlizePopover");
    }

    private async Task GoToSessionDetails(Session session)
    {
        await JSRuntime.InvokeVoidAsync("ui.hidePopover");
        sessionStateContainer.SetValue(session);
        navigationManager.NavigateTo($"/session/{session.PhoneNumber}");
    }

    private string PopoverContentId(Session session)
        => $"popover-content-{SessionId(session)}";

    private string SessionId(Session session)
            => $"{session.PhoneNumber}-{session.Date.Value:ddMMyyHHmmss}";
}