@page "/products"
@using MPT.SamplingMachine.ApiClient;
@using MPT.Vending.API.Dto;
@using Portal.StateContainers;
@attribute [StreamRendering(true)]
@inject NavigationManager navigationManager
@inject SamplingMachineApiClient _client;
@inject ProductStateContainer productStateContainer

<PageTitle>Products</PageTitle>

<h1>Products</h1>

<p>List of products</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Sku</th>
                <th>Picture</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>
                        <button class="btn btn-light" @onclick="() => EditProduct(product.Sku)">@product.Sku</button>
                    </td>
                    <td>
                        <img src="data:image/*;base64,@product.Picture" width="100" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await _client.GetProductsAsync();
    }

    private void EditProduct(string sku)
    {
        productStateContainer.SetValue(products.First(x => x.Sku == sku));
        navigationManager.NavigateTo($"/product/{sku}");
    }
}
